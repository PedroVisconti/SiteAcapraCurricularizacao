// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteAcapra.Data;

#nullable disable

namespace SiteAcapra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250826233622_EmailUnique")]
    partial class EmailUnique
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SiteAcapra.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimalId"));

                    b.Property<bool>("Adotado")
                        .HasColumnType("bit");

                    b.Property<bool>("Castrado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAdocao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoSaude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EspecieId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NecessidadesEspeciais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Porte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RacaId")
                        .HasColumnType("int");

                    b.Property<Guid>("TutorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AnimalId")
                        .HasName("PK_Animal");

                    b.HasIndex("EspecieId");

                    b.HasIndex("RacaId");

                    b.HasIndex("TutorId");

                    b.ToTable("Animal", (string)null);
                });

            modelBuilder.Entity("SiteAcapra.Models.AnimalVacina", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("VacinaId")
                        .HasColumnType("int");

                    b.Property<int>("AnimalVacinaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataVacina")
                        .HasColumnType("datetime");

                    b.HasKey("AnimalId", "VacinaId");

                    b.HasIndex("VacinaId");

                    b.ToTable("AnimalVacina", (string)null);
                });

            modelBuilder.Entity("SiteAcapra.Models.Especie", b =>
                {
                    b.Property<int>("EspecieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EspecieId"));

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EspecieId")
                        .HasName("PK_Especie");

                    b.ToTable("Especie", (string)null);
                });

            modelBuilder.Entity("SiteAcapra.Models.FormularioAdocao", b =>
                {
                    b.Property<int>("FormularioAdocaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormularioAdocaoId"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPreenchimento")
                        .HasColumnType("datetime");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FormularioAdocaoId")
                        .HasName("PK_FormularioAdocao");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("FormularioAdocao", (string)null);
                });

            modelBuilder.Entity("SiteAcapra.Models.Foto", b =>
                {
                    b.Property<Guid>("FotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("FotoHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FotoId")
                        .HasName("PK_Foto");

                    b.HasIndex("AnimalId");

                    b.ToTable("Foto", (string)null);
                });

            modelBuilder.Entity("SiteAcapra.Models.Raca", b =>
                {
                    b.Property<int>("RacaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RacaId"));

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RacaId")
                        .HasName("PK_Raca");

                    b.ToTable("Raca", (string)null);
                });

            modelBuilder.Entity("SiteAcapra.Models.TipoUsuario", b =>
                {
                    b.Property<int>("TipoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoUsuarioId"));

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TipoUsuarioId")
                        .HasName("PK_TipoUsuario");

                    b.ToTable("TipoUsuario", (string)null);
                });

            modelBuilder.Entity("SiteAcapra.Models.Tutor", b =>
                {
                    b.Property<Guid>("TutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sexo")
                        .HasColumnType("char(1)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("TutorId")
                        .HasName("PK_Tutor");

                    b.ToTable("Tutor", (string)null);
                });

            modelBuilder.Entity("SiteAcapra.Models.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .IsFixedLength();

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("TipoUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId")
                        .HasName("PK_Usuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("SiteAcapra.Models.Vacina", b =>
                {
                    b.Property<int>("VacinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacinaId"));

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VacinaId")
                        .HasName("PK_Vacina");

                    b.ToTable("Vacina", (string)null);
                });

            modelBuilder.Entity("SiteAcapra.Models.Animal", b =>
                {
                    b.HasOne("SiteAcapra.Models.Especie", "Especie")
                        .WithMany("Animais")
                        .HasForeignKey("EspecieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Animal_Especie");

                    b.HasOne("SiteAcapra.Models.Raca", "Raca")
                        .WithMany("Animais")
                        .HasForeignKey("RacaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Animal_Raca");

                    b.HasOne("SiteAcapra.Models.Tutor", "Tutor")
                        .WithMany("Animals")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Animal_Tutor");

                    b.Navigation("Especie");

                    b.Navigation("Raca");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("SiteAcapra.Models.AnimalVacina", b =>
                {
                    b.HasOne("SiteAcapra.Models.Animal", "Animal")
                        .WithMany("AnimalVacinas")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AnimalVacina_Animal");

                    b.HasOne("SiteAcapra.Models.Vacina", "Vacina")
                        .WithMany("AnimalVacinas")
                        .HasForeignKey("VacinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AnimalVacina_Vacina");

                    b.Navigation("Animal");

                    b.Navigation("Vacina");
                });

            modelBuilder.Entity("SiteAcapra.Models.FormularioAdocao", b =>
                {
                    b.HasOne("SiteAcapra.Models.Animal", "Animal")
                        .WithMany("FormulariosAdocao")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Formulario_Animal");

                    b.HasOne("SiteAcapra.Models.Usuario", "Usuario")
                        .WithMany("Formularios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Formulario_Usuario");

                    b.Navigation("Animal");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SiteAcapra.Models.Foto", b =>
                {
                    b.HasOne("SiteAcapra.Models.Animal", "Animal")
                        .WithMany("Fotos")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Foto_Animal");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("SiteAcapra.Models.Usuario", b =>
                {
                    b.HasOne("SiteAcapra.Models.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuario")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_TipoUsuario");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("SiteAcapra.Models.Animal", b =>
                {
                    b.Navigation("AnimalVacinas");

                    b.Navigation("FormulariosAdocao");

                    b.Navigation("Fotos");
                });

            modelBuilder.Entity("SiteAcapra.Models.Especie", b =>
                {
                    b.Navigation("Animais");
                });

            modelBuilder.Entity("SiteAcapra.Models.Raca", b =>
                {
                    b.Navigation("Animais");
                });

            modelBuilder.Entity("SiteAcapra.Models.TipoUsuario", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SiteAcapra.Models.Tutor", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("SiteAcapra.Models.Usuario", b =>
                {
                    b.Navigation("Formularios");
                });

            modelBuilder.Entity("SiteAcapra.Models.Vacina", b =>
                {
                    b.Navigation("AnimalVacinas");
                });
#pragma warning restore 612, 618
        }
    }
}
